{"version":3,"sources":["../server/app.js"],"names":["express","require","timeout","path","cookieParser","bodyParser","AV","webpack","app","use","static","resolve","__dirname","enable","json","urlencoded","extended","process","env","NODE_ENV","webpackconfig","compiler","noInfo","publicPath","output","stats","assets","colors","version","hash","timings","chunks","chunkModules","req","res","next","send","get","sendFile","console","log","headersSent","err","Error","status","timedout","headers","upgrade","statusCode","error","stack","originalUrl","module","exports"],"mappings":"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","file":"app.js","sourcesContent":["'use strict';\nvar express = require('express');\nvar timeout = require('connect-timeout');\nvar path = require('path');\nvar cookieParser = require('cookie-parser');\nvar bodyParser = require('body-parser');\nvar AV = require('leanengine');\nvar webpack = require('webpack');\n\nimport a from './view/client';\n// 加载云函数定义，你可以将云函数拆分到多个文件方便管理，但需要在主文件中加载它们\nrequire('./cloud/cloud.js');\n\nvar app = express();\n\n\napp.use(express.static(path.resolve(__dirname, '../build')));\n\n// 设置默认超时时间\napp.use(timeout('15s'));\n\n// 加载云引擎中间件\napp.use(AV.express());\n\napp.enable('trust proxy');\n// 需要重定向到 HTTPS 可去除下一行的注释。\n// app.use(AV.Cloud.HttpsRedirect());\n\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({ extended: false }));\napp.use(cookieParser());\n\nif (process.env.NODE_ENV === 'development') { // 开发模式下\n  const webpackconfig = require('../webpack.config.dev.js');\n  const compiler = webpack(webpackconfig);\n  app.use(require('webpack-dev-middleware')(compiler, {\n    noInfo: true,\n    publicPath: webpackconfig.output.publicPath,\n    stats: {\n      assets: false,\n      colors: true,\n      version: false,\n      hash: false,\n      timings: false,\n      chunks: false,\n      chunkModules: false,\n    },\n  }));\n  app.use(require('webpack-hot-middleware')(compiler));\n} \n\n\n\n\n\napp.use('/apiclient', function(req, res, next) {\n  res.send('client');\n});\n\napp.use('/apimanage', function(req, res, next) {\n  res.send('manage');\n});\n\n\napp.get('/manage', function(req, res, next) {\n  res.sendFile(path.resolve(__dirname, './manage.html'));\n});\n\napp.get('/', function(req, res, next) {\n  console.log('hhh');\n  res.sendFile(path.resolve(__dirname, './client.html'));\n});\n\n\n\napp.use(function(req, res, next) {\n  // 如果任何一个路由都没有返回响应，则抛出一个 404 异常给后续的异常处理器\n  if (!res.headersSent) {\n    var err = new Error('Not Found');\n    err.status = 404;\n    next(err);\n  }\n});\n\n// error handlers\napp.use(function(err, req, res, next) {\n  if (req.timedout && req.headers.upgrade === 'websocket') {\n    // 忽略 websocket 的超时\n    return;\n  }\n\n  var statusCode = err.status || 500;\n  if (statusCode === 500) {\n    console.error(err.stack || err);\n  }\n  if (req.timedout) {\n    console.error('请求超时: url=%s, timeout=%d, 请确认方法执行耗时很长，或没有正确的 response 回调。', req.originalUrl, err.timeout);\n  }\n  res.status(statusCode);\n  // 默认不输出异常详情\n  var error = {};\n  if (app.get('env') === 'development') {\n    // 如果是开发环境，则将异常堆栈输出到页面，方便开发调试\n    error = err;\n  }\n  res.send(err);\n});\n\nmodule.exports = app;\n"]}