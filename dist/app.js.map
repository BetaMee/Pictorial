{"version":3,"sources":["../server/app.js"],"names":["app","use","static","resolve","__dirname","express","enable","json","urlencoded","extended","process","env","NODE_ENV","webpackconfig","require","compiler","noInfo","publicPath","output","stats","assets","colors","version","hash","timings","chunks","chunkModules","get","req","res","next","html","status","end","headersSent","err","Error","timedout","headers","upgrade","statusCode","console","error","stack","originalUrl","timeout","send","module","exports"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;AAEA;AACA;;AAEA,IAAMA,MAAM,wBAAZ;;AAGAA,IAAIC,GAAJ,CAAQ,kBAAQC,MAAR,CAAe,eAAKC,OAAL,CAAaC,SAAb,EAAwB,UAAxB,CAAf,CAAR;;AAEA;AACAJ,IAAIC,GAAJ,CAAQ,8BAAQ,KAAR,CAAR;;AAEA;AACAD,IAAIC,GAAJ,CAAQ,qBAAGI,OAAH,EAAR;;AAEAL,IAAIM,MAAJ,CAAW,aAAX;AACA;AACA;;AAEAN,IAAIC,GAAJ,CAAQ,qBAAWM,IAAX,EAAR;AACAP,IAAIC,GAAJ,CAAQ,qBAAWO,UAAX,CAAsB,EAAEC,UAAU,KAAZ,EAAtB,CAAR;;AAEA;AACA,IAAIC,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4C;AAAE;AAC5C,MAAMC,gBAAgBC,QAAQ,0BAAR,CAAtB;AACA,MAAMC,WAAW,uBAAQF,aAAR,CAAjB;AACAb,MAAIC,GAAJ,CAAQa,QAAQ,wBAAR,EAAkCC,QAAlC,EAA4C;AAClDC,YAAQ,IAD0C;AAElDC,gBAAYJ,cAAcK,MAAd,CAAqBD,UAFiB;AAGlDE,WAAO;AACLC,cAAQ,KADH;AAELC,cAAQ,IAFH;AAGLC,eAAS,KAHJ;AAILC,YAAM,KAJD;AAKLC,eAAS,KALJ;AAMLC,cAAQ,KANH;AAOLC,oBAAc;AAPT;AAH2C,GAA5C,CAAR;AAaA1B,MAAIC,GAAJ,CAAQa,QAAQ,wBAAR,EAAkCC,QAAlC,CAAR;AACD;;AAID;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;;AAEAf,IAAI2B,GAAJ,CAAQ,GAAR,EAAa,UAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAC/B,MAAMC,OAAO,4BAAiBrB,QAAQC,GAAR,CAAYC,QAA7B,CAAb;AACAiB,MAAIG,MAAJ,CAAW,GAAX,EAAgBC,GAAhB,CAAoBF,IAApB;AACD,CAHD;;AAOA/B,IAAIC,GAAJ,CAAQ,UAAC2B,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAC1B;AACA,MAAI,CAACD,IAAIK,WAAT,EAAsB;AACpB,QAAIC,MAAM,IAAIC,KAAJ,CAAU,WAAV,CAAV;AACAD,QAAIH,MAAJ,GAAa,GAAb;AACAF,SAAKK,GAAL;AACD;AACF,CAPD;;AASA;AACAnC,IAAIC,GAAJ,CAAQ,UAACkC,GAAD,EAAMP,GAAN,EAAWC,GAAX,EAAgBC,IAAhB,EAAyB;AAC/B,MAAIF,IAAIS,QAAJ,IAAgBT,IAAIU,OAAJ,CAAYC,OAAZ,KAAwB,WAA5C,EAAyD;AACvD;AACA;AACD;;AAED,MAAIC,aAAaL,IAAIH,MAAJ,IAAc,GAA/B;AACA,MAAIQ,eAAe,GAAnB,EAAwB;AACtBC,YAAQC,KAAR,CAAcP,IAAIQ,KAAJ,IAAaR,GAA3B;AACD;AACD,MAAIP,IAAIS,QAAR,EAAkB;AAChBI,YAAQC,KAAR,CAAc,2DAAd,EAA2Ed,IAAIgB,WAA/E,EAA4FT,IAAIU,OAAhG;AACD;AACDhB,MAAIG,MAAJ,CAAWQ,UAAX;AACA;AACA,MAAIE,QAAQ,EAAZ;AACA,MAAI1C,IAAI2B,GAAJ,CAAQ,KAAR,MAAmB,aAAvB,EAAsC;AACpC;AACAe,YAAQP,GAAR;AACD;AACDN,MAAIiB,IAAJ,CAASX,GAAT;AACD,CArBD;;AAuBAY,OAAOC,OAAP,GAAiBhD,GAAjB","file":"app.js","sourcesContent":["import express from 'express';\nimport bodyParser from 'body-parser';\nimport timeout from 'connect-timeout';\nimport path from 'path';\nimport AV from 'leanengine';\nimport webpack from 'webpack';\n\nimport { RenderClientPage, RenderManagePage } from './view/view';\n\n// 加载云函数定义，你可以将云函数拆分到多个文件方便管理，但需要在主文件中加载它们\n// require('./cloud/cloud.js');\n\nconst app = express();\n\n\napp.use(express.static(path.resolve(__dirname, '../build')));\n\n// 设置默认超时时间\napp.use(timeout('15s'));\n\n// 加载云引擎中间件\napp.use(AV.express());\n\napp.enable('trust proxy');\n// 需要重定向到 HTTPS 可去除下一行的注释。\n// app.use(AV.Cloud.HttpsRedirect());\n\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({ extended: false }));\n\n//热加载热替换在开发环境下的配置\nif (process.env.NODE_ENV === 'development') { // 开发模式下\n  const webpackconfig = require('../webpack.config.dev.js');\n  const compiler = webpack(webpackconfig);\n  app.use(require('webpack-dev-middleware')(compiler, {\n    noInfo: true,\n    publicPath: webpackconfig.output.publicPath,\n    stats: {\n      assets: false,\n      colors: true,\n      version: false,\n      hash: false,\n      timings: false,\n      chunks: false,\n      chunkModules: false,\n    },\n  }));\n  app.use(require('webpack-hot-middleware')(compiler));\n} \n\n\n\n// app.use('/apiclient', function(req, res, next) {\n//   res.send('client');\n// });\n\n// app.use('/apimanage', function(req, res, next) {\n//   res.send('manage');\n// });\n\n\n// app.get('/manage', function(req, res, next) {\n//   res.sendFile(path.resolve(__dirname, './manage.html'));\n// });\n\napp.get('/', (req, res, next) => {\n  const html = RenderClientPage(process.env.NODE_ENV);\n  res.status(200).end(html);\n});\n\n\n\napp.use((req, res, next) => {\n  // 如果任何一个路由都没有返回响应，则抛出一个 404 异常给后续的异常处理器\n  if (!res.headersSent) {\n    var err = new Error('Not Found');\n    err.status = 404;\n    next(err);\n  }\n});\n\n// error handlers\napp.use((err, req, res, next) => {\n  if (req.timedout && req.headers.upgrade === 'websocket') {\n    // 忽略 websocket 的超时\n    return;\n  }\n\n  var statusCode = err.status || 500;\n  if (statusCode === 500) {\n    console.error(err.stack || err);\n  }\n  if (req.timedout) {\n    console.error('请求超时: url=%s, timeout=%d, 请确认方法执行耗时很长，或没有正确的 response 回调。', req.originalUrl, err.timeout);\n  }\n  res.status(statusCode);\n  // 默认不输出异常详情\n  var error = {};\n  if (app.get('env') === 'development') {\n    // 如果是开发环境，则将异常堆栈输出到页面，方便开发调试\n    error = err;\n  }\n  res.send(err);\n});\n\nmodule.exports = app;\n"]}