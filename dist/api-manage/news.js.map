{"version":3,"sources":["../../server/api-manage/news.js"],"names":["storage","memoryStorage","upload","router","Router","Headline","Object","extend","NewsLists","post","single","req","res","next","content","body","imgFile","file","headline","set","pageTitle","pageLink","File","originalname","buffer","save","then","result","url","hd","response","objectId","id","get","imgUrl","json","success","message","data","catch","err","Query","doCloudQuery","redirect","newsLists","category"],"mappings":"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","file":"news.js","sourcesContent":["import express from 'express';\r\nimport AV from 'leanengine';\r\nimport multer from 'multer';\r\n\r\nconst storage = multer.memoryStorage();\r\nconst upload = multer({ storage });\r\n\r\nconst router = express.Router();\r\n\r\nconst Headline = AV.Object.extend('Headline');\r\nconst NewsLists = AV.Object.extend('NewsLists');\r\n\r\n// POST /apimanage/news/addheadline 增加新闻信息\r\nrouter.post('/addheadline', upload.single('imgFile'), (req, res, next) => {\r\n  const content = req.body;\r\n  const imgFile = req.file;\r\n\r\n  // 存储标题和链接\r\n  const headline = new Headline();\r\n  headline.set('pageTitle', content.pageTitle);\r\n  headline.set('pageLink', content.pageLink);\r\n  // 存储图片\r\n  const file = new AV.File(imgFile.originalname, imgFile.buffer);\r\n  file.save()\r\n    .then((result) => {\r\n      headline.set('imgUrl', result.url());\r\n      headline.save()\r\n        .then((hd) => {\r\n          const response = {\r\n            objectId: hd.id,\r\n            pageLink: hd.get('pageLink'),\r\n            pageTitle: hd.get('pageTitle'),\r\n            imgUrl: hd.get('imgUrl'),\r\n          };\r\n          res.json({\r\n            success: true,\r\n            message: '发送成功',\r\n            data: response,\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          res.json({\r\n            success: false,\r\n            message: err.message,\r\n          });\r\n        });\r\n    })\r\n    .catch((err) => {\r\n      res.json({\r\n        success: false,\r\n        message: err.message,\r\n      });\r\n    });\r\n});\r\n\r\n// POST /apimanage/news/deleheadline 删除头条信息\r\nrouter.post('/deleheadline', (req, res, next) => {\r\n  const { objectId } = req.body;\r\n  // 执行 CQL 语句实现删除一个 Todo 对象\r\n  AV.Query.doCloudQuery(`delete from Headline where objectId=\"${objectId}\"`)\r\n    .then((success) => {\r\n      res.redirect('/apiclient/news/getheadlines');\r\n    })\r\n    .catch((err) => {\r\n      res.json({\r\n        success: false,\r\n        message: err.message,\r\n      });\r\n    });\r\n});\r\n\r\n\r\n// POST /apimanage/news/addnews 添加信息\r\nrouter.post('/addnews', upload.single('imgFile'), (req, res, next) => {\r\n  const content = req.body;\r\n  const imgFile = req.file;\r\n\r\n  // 存储标题和链接\r\n  const newsLists = new NewsLists();\r\n  newsLists.set('pageTitle', content.pageTitle);\r\n  newsLists.set('pageLink', content.pageLink);\r\n  newsLists.set('category', content.category);\r\n  // 存储图片\r\n  const file = new AV.File(imgFile.originalname, imgFile.buffer);\r\n  file.save()\r\n    .then((result) => {\r\n      newsLists.set('imgUrl', result.url());\r\n      newsLists.save()\r\n        .then((success) => {\r\n          res.redirect('/apiclient/news/getnews');\r\n        })\r\n        .catch((err) => {\r\n          res.json({\r\n            success: false,\r\n            message: err.message,\r\n          });\r\n        });\r\n    })\r\n    .catch((err) => {\r\n      res.json({\r\n        success: false,\r\n        message: err.message,\r\n      });\r\n    });\r\n});\r\n\r\n// POST /apimanage/news/delenews 删除新闻\r\nrouter.post('/delenews', (req, res, next) => {\r\n  const { objectId } = req.body;\r\n  // 执行 CQL 语句实现删除一个 Todo 对象\r\n  AV.Query.doCloudQuery(`delete from NewsLists where objectId=\"${objectId}\"`)\r\n    .then((success) => {\r\n      res.redirect('/apiclient/news/getnews');\r\n    })\r\n    .catch((err) => {\r\n      res.json({\r\n        success: false,\r\n        message: err.message,\r\n      });\r\n    });\r\n});\r\n\r\nexport default router;\r\n"]}